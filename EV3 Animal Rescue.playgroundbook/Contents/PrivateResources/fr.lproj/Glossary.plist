<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>Abstract</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>L’abstraction consiste à expliquer un problème ou une solution en omettant les détails sans importance. En d’autres termes, il s’agit de la capacité à conceptualiser une idée. </string>
			</dict>
		</dict>
		<key>Behavior</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Fonctionnement d’un robot ou d’une machine.
</string>
			</dict>
		</dict>
		<key>Color Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le capteur de couleur est un capteur numérique qui peut détecter la couleur ou l’intensité de la lumière qui entre par le petit espace situé à l’avant du capteur. Trois différents modes peuvent être utilisés : le mode Couleur, Intensité de la lumière réfléchie et Intensité lumineuse ambiante.

En mode Couleur, le capteur de couleur détecte sept couleurs (noir, bleu, vert, jaune, rouge, blanc et marron), ainsi que « Aucune couleur ». Cette capacité à différencier les couleurs te permet de programmer ton robot de façon à trier des balles ou des blocs de couleur, à énoncer le nom des couleurs qu’il détecte ou à cesser toute opération lorsqu’il voit du rouge.

En mode Intensité de la lumière réfléchie, le capteur de couleur mesure l’intensité de la lumière réfléchie par une lampe émettant une lumière rouge. Il utilise une échelle allant de 0 (très sombre) à 100 (très lumineux). Cela signifie que tu peux programmer ton robot de façon à le déplacer sur une surface blanche jusqu’à ce qu’il détecte une ligne noire, ou à interpréter une carte d’identification possédant un code couleur.

En mode Intensité lumineuse ambiante, le capteur de couleur mesure l’intensité de la lumière environnante qui passe par l’espace prévu à cet effet, comme celle des rayons du soleil ou celle issue d’une lampe torche. Le capteur utilise une échelle allant de 0 (très sombre) à 100 (très lumineux). Cela signifie que tu peux programmer ton robot de façon à déclencher une alarme au lever du soleil ou à cesser toute opération une fois la nuit tombée.</string>
			</dict>
		</dict>
		<key>Data View</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Deuxième écran de la Vue en direct, qui affiche des graphiques de valeurs dans le temps provenant de moteurs et de capteurs connectés.</string>
			</dict>
		</dict>
		<key>Decompose</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La décomposition consiste à simplifier un problème en le répartissant en plus petits éléments, de façon à simplifier sa résolution.</string>
			</dict>
		</dict>
		<key>EV3 Brick</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Fait office de centre de commandes et de station d’alimentation pour ton robot.</string>
			</dict>
		</dict>
		<key>Evaluate</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>L’évaluation, ou le débuggage, consiste à vérifier si un prototype fonctionne comme prévu, et, si ce n’est pas le cas, à identifier ce qui doit être amélioré.</string>
			</dict>
		</dict>
		<key>Function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Un ensemble de commandes désigné qui peut être exécuté à tout moment en cas de besoin.</string>
			</dict>
		</dict>
		<key>Generalize</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La généralisation consiste à reconnaître les éléments d’une tâche qui sont connus, ou qui ont déjà été vus ailleurs. </string>
			</dict>
		</dict>
		<key>Gyro Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le capteur gyroscopique est un capteur numérique détectant le mouvement giratoire sur un seul axe. Si tu fais pivoter le capteur gyroscopique dans la direction des flèches situées sur son boîtier, il peut détecter le taux de rotations en degrés par seconde (il peut détecter une vitesse de rotation allant jusqu’à 440 degrés par seconde). Tu peux alors utiliser le taux de rotations pour, par exemple, détecter le moment où le robot fait pivoter un de ses éléments, ou celui où il tombe.

En outre, le capteur gyroscopique garde une trace de l’angle de rotation total en degrés. Tu peux utiliser cet angle de rotation pour, par exemple, détecter dans quelle mesure ton robot a pivoté. Cette fonctionnalité te permet de programmer des tours (sur l’axe mesuré par le capteur gyroscopique) avec une précision de plus ou moins 3 degrés pour une rotation de 90 degrés.</string>
			</dict>
		</dict>
		<key>Infrared Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le capteur infrarouge est un capteur numérique qui peut détecter la lumière infrarouge réfléchie par des objets solides.</string>
			</dict>
		</dict>
		<key>Input</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Dans un système robotique, les entrées servent notamment à recueillir des informations du monde réel, comme les capteurs. Par exemple, le capteur à ultrasons détectera la présence d’objets situés devant lui.</string>
			</dict>
		</dict>
		<key>Motor (Large)</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le gros moteur est puissant et « intelligent ». Il possède un capteur de rotation intégré avec une précision au degré près, pour un contrôle parfait. Il est optimisé pour faire office de base permettant de conduire tes robots.

Tu peux le programmer pour l’activer ou le désactiver, contrôler son niveau de puissance ou être actif pendant une certaine durée ou un nombre de rotations spécifique.</string>
			</dict>
		</dict>
		<key>Motor (Medium)</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le moteur moyen contient également un capteur de rotation intégré (avec une précision au degré près), mais il est plus petit et plus léger que le gros moteur. Cela signifie qu’il est en mesure de répondre plus rapidement que ce dernier.

Tu peux le programmer pour l’activer ou le désactiver, contrôler son niveau de puissance ou être actif pendant une certaine durée ou un nombre de rotations spécifique.</string>
			</dict>
		</dict>
		<key>Output</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Dans un système robotique, les sorties servent notamment à modifier des éléments du monde réel. Par exemple, les moteurs servent à créer des mouvements, les haut-parleurs à produire des sons, les DEL à diffuser de la lumière et l’écran à montrer des images ou du texte.</string>
			</dict>
		</dict>
		<key>Parameters</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Caractéristiques d’une fonction, pouvant être modifiées de façon à changer son comportement.</string>
			</dict>
		</dict>
		<key>Port View</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Premier écran de la Vue en direct, affichant les zones relatives aux informations du port, avec les valeurs des moteurs et des capteurs connectés.</string>
			</dict>
		</dict>
		<key>Program Flow</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Ordre d’exécution des structures des fonctions et des boucles dans un programme.</string>
			</dict>
		</dict>
		<key>Quick Help Function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Zone d’aide contextuelle affichant des informations sur des fonctions et leurs paramètres.</string>
			</dict>
		</dict>
		<key>Think Algorithmically</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La pensée algorithmique consiste à créer une suite d’étapes ordonnée dans le but de résoudre un problème.</string>
			</dict>
		</dict>
		<key>Touch Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le capteur tactile est analogue. Il peut détecter le moment où quelqu’un appuie sur son bouton rouge, et celui où on le relâche. Cela signifie que le capteur tactile peut être programmé pour exécuter des actions en fonction de deux conditions : appuyé ou relâché. Les entrées enregistrées par le capteur tactile te permettent de programmer un robot de façon à ce qu’il voie le monde comme une personne aveugle, qui avance sa main et réagit en touchant quelque chose (l’équivalent d’une pression sur le capteur tactile).

Tu peux monter un robot avec un capteur tactile appuyé contre sa surface inférieure. Tu peux alors programmer le robot de façon à répondre (Stop !) s’il est sur le point de tomber du bord de la table (une fois le capteur relâché)
			</string>
			</dict>
		</dict>
		<key>Ultrasonic Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Le capteur à ultrasons est numérique. Il peut mesurer la distance le séparant d’un objet placé devant lui. Il effectue cette opération en envoyant des ondes sonores à haute fréquence et en mesurant la durée nécessaire au son pour revenir à lui. La fréquence du son est trop haute pour être entendue par l’oreille humaine.

La distance jusqu’à un objet peut être mesurée en pouces ou en centimètres. Cela te permet de programmer ton robot de façon à e le faire s’arrêter à une certaine distance d’un mur.

Si tu fais appel à des centimètres, le capteur peut détecter une distance comprise entre 3 et 250 centimètres (avec une précision de plus ou moins un centimètre). Si tu fais appel à des pouces, le capteur peut détecter une distance comprise entre 1 et 99 pouces (avec une précision de plus ou moins 0,394 pouce). 255 centimètres correspondent à 100 pouces.</string>
			</dict>
		</dict>
		<key>Value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Numéro ou chaîne, transmis dans une fonction à l’aide de paramètres.</string>
			</dict>
		</dict>
		<key>ev3.brickLightOff</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `brickLightOff` permet d’éteindre les témoins d’état de la brique.</string>
			</dict>
		</dict>
		<key>ev3.brickLightOn</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction`brickLightOn` permet de contrôler le témoin de statut de la brique. Le témoin d’état entoure les boutons de la face avant de la brique EV3. Tu peux allumer les témoins d’état de la brique en vert, orange ou en rouge, les éteindre, ou les faire clignoter.</string>
			</dict>
		</dict>
		<key>ev3.display</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `display` permet d’afficher du texte n’importe où sur l’écran de la brique EV3.</string>
			</dict>
		</dict>
		<key>ev3.displayCircle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `displayCircle` permet de dessiner un cercle sur l’écran.</string>
			</dict>
		</dict>
		<key>ev3.displayImage</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `displayImage` permet de dessiner le fichier image d’un graphique. Tu peux choisir un fichier image parmi ceux disponibles dans la brique EV3.</string>
			</dict>
		</dict>
		<key>ev3.displayLine</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `displayLine` permet de dessiner une ligne droite entre deux points de l’écran.</string>
			</dict>
		</dict>
		<key>ev3.displayPoint</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `displayPoint` permet de dessiner un seul pixel sur l’écran.</string>
			</dict>
		</dict>
		<key>ev3.displayRectangle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `displayRectangle` permet de dessiner un rectangle sur l’écran.</string>
			</dict>
		</dict>
		<key>ev3.measureGyroAngle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureGyroAngle` permet de mesurer l’angle à l’aide du capteur gyroscopique. L’angle est mesuré par rapport au moment où le capteur a été réinitialisé pour la dernière fois.</string>
			</dict>
		</dict>
		<key>ev3.measureGyroRate</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureGyroRate` permet de mesurer le taux de rotations en degrés par seconde à l’aide du capteur gyroscopique.</string>
			</dict>
		</dict>
		<key>ev3.measureLightAmbient</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureLightAmbient` permet de mesurer l’intensité lumineuse ambiante à l’aide du capteur de couleur.</string>
			</dict>
		</dict>
		<key>ev3.measureLightColor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureLightColor` permet de détecter les couleurs à l’aide du capteur de couleur.</string>
			</dict>
		</dict>
		<key>ev3.measureLightReflection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureLightReflection` permet de mesurer l’intensité de la lumière réfléchie à l’aide du capteur de couleur.</string>
			</dict>
		</dict>
		<key>ev3.measureMotorDegrees</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureLightReflection` permet de mesurer la rotation du moteur en degrés. La rotation du moteur est mesurée en degrés, par rapport à la position du moteur au commencement du programme ou au moment où le capteur a été réinitialisé pour la dernière fois.</string>
			</dict>
		</dict>
		<key>ev3.measureMotorPower</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureMotorPower` permet de mesurer le niveau de puissance actuel du moteur.</string>
			</dict>
		</dict>
		<key>ev3.measureMotorRotations</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureMotorRotations` permet de mesurer la rotation du moteur en nombre de rotations. La rotation du moteur est mesurée en nombre de rotations, par rapport à la position du moteur au commencement du programme ou au moment où le capteur a été réinitialisé pour la dernière fois.</string>
			</dict>
		</dict>
		<key>ev3.measureTouch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureTouch` permet de mesurer l’état du capteur tactile. Les deux états du capteur tactile sont Appuyé ou Relâché</string>
			</dict>
		</dict>
		<key>ev3.measureTouchCount</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureTouchCount` permet de mesurer le nombre de pressions effectuées sur le capteur tactile depuis sa dernière réinitialisation ou depuis le commencement du programme.</string>
			</dict>
		</dict>
		<key>ev3.measureUltrasonicCentimeters</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureUltrasonicCentimeters` permet de mesurer la distance par rapport à un objet, en centimètres, à l’aide du capteur à ultrasons.</string>
			</dict>
		</dict>
		<key>ev3.measureUltrasonicInches</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `measureUltrasonicInches` permet de mesurer la distance par rapport à un objet, en pouces, à l’aide du capteur à ultrasons.</string>
			</dict>
		</dict>
		<key>ev3.motorOff</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `motorOff` permet d’éteindre le moteur. Elle sert généralement à arrêter un moteur qui a été démarré antérieurement dans le programme à l’aide de la fonction 'motorOn'. Si withBrake a pour valeur « True », le moteur s’arrête immédiatement. Il restera en position éteinte jusqu’à ce qu’il soit redémarré à l’aide d’une autre fonction, ou jusqu’à la fin du programme. Si withBrake a pour valeur « False », l’alimentation du moteur est simplement désactivée. Le moteur restera en suspens en utilisant le reste d’énergie jusqu’à s’arrêter, ou jusqu’à ce qu’une autre fonction ne soit exécutée.</string>
			</dict>
		</dict>
		<key>ev3.motorOn</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `motorOn` permet de contrôler un moteur. Tu peux allumer ou éteindre un moteur, contrôler son niveau de puissance, ou l’allumer pendant une certaine période ou un certain nombre de rotations. La fonction 'motorOn' permet d’allumer le moteur, puis de passer immédiatement au prochain bloc du programme, sauf si la durée est indiquée à l’aide des paramètres forSeconds, forDegrees ou forRotations. Tu peux contrôler la vitesse et l’orientation du moteur à l’aide des paramètres withPower. Le moteur continuera de fonctionner jusqu’à ce qu’il soit éteint ou qu’il reçoive une instruction différente, plus tard dans le programme, ou encore jusqu’à ce que ce dernier se termine.</string>
			</dict>
		</dict>
		<key>ev3.move</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `move` peut faire avancer ou reculer un robot, le faire tourner ou l’arrêter. Utilise la fonction 'move' pour les véhicules robotisés qui possèdent deux gros moteurs, l’un contrôlant le côté gauche et l’autre le côté droit. Tu peux faire se déplacer les deux moteurs à des vitesses ou dans des directions différentes, de façon à faire pivoter le robot. La fonction 'move' permet d’allumer les deux moteurs, puis de passer immédiatement à la prochaine instruction du programme, sauf si la durée est indiquée à l’aide des paramètres forSeconds, forDegrees ou forRotations. Tu peux contrôler la vitesse et l’orientation des moteurs à l’aide des paramètres leftPower et rightPower. Les moteurs continueront de fonctionner jusqu’à ce qu’ils soient éteints ou qu’ils reçoivent une instruction différente, plus tard dans le programme, ou encore jusqu’à ce que ce dernier se termine.</string>
			</dict>
		</dict>
		<key>ev3.playSound</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `playSound` permet d’émettre un son à l’aide du haut-parleur situé à l’intérieur de la brique EV3. Tu peux lire des fichiers sonores pré-enregistrés ou indiquer une note de musique ou un son de ton choix.</string>
			</dict>
		</dict>
		<key>ev3.resetGyro</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `resetGyro` te permet de réinitialiser le compteur gyroscopique.</string>
			</dict>
		</dict>
		<key>ev3.resetMotor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `resetMotor` te permet de réinitialiser le compteur de rotations du moteur.</string>
			</dict>
		</dict>
		<key>ev3.resetTouchCount</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>The `resetTouchCount` function allows you to reset the touch counter.</string>
			</dict>
		</dict>
		<key>ev3.stopMove</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `stopMove` permet d’éteindre les deux moteurs. Utilise la fonction 'stopMove' pour arrêter un robot qui a été démarré à l’aide la fonction 'move' antérieurement dans le programme. Si withBrake a pour valeur « True », les moteurs s’arrêtent immédiatement. Ils resteront en position éteinte jusqu’à ce qu’ils soient redémarrés à l’aide d’une autre fonction, ou jusqu’à la fin du programme. Si withBrake a pour valeur « False », l’alimentation des moteurs est simplement désactivée. Les moteurs resteront en suspens en utilisant le reste d’énergie jusqu’à s’arrêter, ou jusqu’à ce qu’une autre fonction ne soit exécutée.</string>
			</dict>
		</dict>
		<key>ev3.stopSound</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `stopSound` permet d’arrêter la lecture d’un son émis par la brique EV3. Cela sert généralement à arrêter la lecture d’un son qui a été démarrée antérieurement dans le programme, à l’aide d’une fonction 'playSound’ qui n’a pas attendu que la lecture soit terminée.</string>
			</dict>
		</dict>
		<key>ev3.waitFor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitFor` permet à ton programme d’attendre pendant une certaine durée, indiquée en secondes, avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForGyroAngle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForGyroAngle` permet à ton programme d’attendre que l’angle atteigne un degré supérieur ou inférieur à un certain seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForGyroRate</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForGyroAngle` permet à ton programme d’attendre que le taux de rotations, mesuré en degrés par seconde, atteigne un stade supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForLightAmbient</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForLightAmbient` permet à ton programme d’attendre que l’intensité lumineuse ambiante mesurée atteigne un degré supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForLightColor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForLightColor` permet à ton programme d’attendre jusqu’à ce que le capteur de couleur détecte une couleur spécifique avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForLightReflection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForLightReflection` permet à ton programme d’attendre que l’intensité de la lumière réfléchie mesurée atteigne un degré supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForMotorDegrees</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForMotorDegrees` permet à ton programme d’attendre que le taux de rotations de ton moteur, mesuré en degrés, atteigne un stade supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForMotorPower</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForGyroAngle` permet à ton programme d’attendre que la puissance attribuée à un moteur atteigne un degré supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForMotorRotations</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForMotorRotations` permet à ton programme d’attendre que le taux de rotations de ton moteur, mesuré en nombre de rotations, atteigne un stade supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForTouch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForTouch` permet à ton programme d’attendre jusqu’à ce que le capteur tactile détecte une pression avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForTouchCount</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForTouchCount` permet à ton programme d’attendre jusqu’à ce que le capteur tactile ait détecté un certain nombre de pressions avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForTouchReleased</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForTouchReleased` permet à ton programme d’attendre jusqu’à ce que le capteur tactile soit relâché avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicCentimeters</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForUltrasonicCentimeters` permet à ton programme d’attendre que la distance, mesurée en centimètres, atteigne un stade supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicDecrease</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForUltrasonicDecrease` permet à ton programme d’attendre que la distance mesurée diminue avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicInches</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForUltrasonicInches` permet à ton programme d’attendre que la distance, mesurée en pouces, atteigne un stade supérieur ou inférieur à une certaine valeur de seuil avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicIncrease</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>La fonction `waitForUltrasonicIncrease` permet à ton programme d’attendre que la distance mesurée augmente avant de passer à la prochaine instruction du programme.</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
