<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Terms</key>
	<dict>
		<key>Abstract</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>抽象化とは、問題または解きかたについて、重要でない細かいことを除いて説明することです。つまり、アイデアを一般的に説明することです。</string>
			</dict>
		</dict>
		<key>Behavior</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ロボットまたは機械が動く方法。
</string>
			</dict>
		</dict>
		<key>Color Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>カラーセンサーは、センサー前面の小さな窓から入ってくる光の色または強さを検出できるデジタルセンサーです。このセンサーは、カラーモード、反射光の強さモード、周辺の光の強さモードという3つのモードで使用できます。

カラーモードでは、黒、青、緑、黄、赤、白、ブラウンの7色と、色がないことを検出します。色の違いを検出できることは、色のついたボールやブロックを並べ替えたり、検出された色の名前を読み上げたり、赤い色を見たら動きを止めたりするようにロボットをプログラミングできることを意味します。

反射光の強さモードでは、ランプから赤い光を出して反射される光の強さを測定します。0（非常に暗い）〜100（非常に明るい）の測定単位が使用されます。これは、黒い線が検出されるまで白い表面の上を動き回るように、または色分けされた識別カードを解釈するようにロボットをプログラミングできることを意味します。

周辺の光の強さモードでは、周辺から窓に入ってくる光（日光やフラッシュライトの光など）の強さを測定します。0（非常に暗い）〜 100（非常に明るい）の測定単位が使用されます。これは、朝日が昇るときにアラームが作動するように、または光が消えたら動きを止めるようにロボットをプログラミングできることを意味します。</string>
			</dict>
		</dict>
		<key>Data View</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ライブビューの2番目の画面。接続されたモーターやセンサーの値が時間の流れに沿って図やグラフで表示されます。</string>
			</dict>
		</dict>
		<key>Decompose</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>分解とは、問題の解きかたを見つけやすくするために、その問題を小さな部分に分けることです。</string>
			</dict>
		</dict>
		<key>EV3 Brick</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ロボットのコントロールセンターであり、電力ステーションでもあります。</string>
			</dict>
		</dict>
		<key>Evaluate</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>評価/デバッグとは、プロトタイプが思った通りに動くかどうかを確かめること、動かない場合は動くようにするために何が必要かを突き止めることです。</string>
			</dict>
		</dict>
		<key>Function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>必要なときにすばやく実行できるように、一連のコマンドに名前を付けたもの。</string>
			</dict>
		</dict>
		<key>Generalize</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>一般化とは、知られている、またはほかの場所でも見られたタスクの部分を認識することです。</string>
			</dict>
		</dict>
		<key>Gyro Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ジャイロセンサーは、1つの軸上での回転の動きを検出するデジタルセンサーです。 ジャイロセンサーをケース上の矢印の方向に回転させると、センサーは回転速度を度毎秒（deg/s）で測定できます（測定できる最大回転速度は440 deg/s）。たとえば、この回転速度を使って、ロボットの一部が向きを変えたことや、ロボットが転んだことを検出できます。

さらに、ジャイロセンサーは合計回転角度を追跡できます。たとえば、この回転角度を使って、ロボットがどのくらい回転したかを検出できます。この機能を使って、ジャイロセンサーの測定軸上での90度の回転を誤差3度の精度でプログラミングすることができます。</string>
			</dict>
		</dict>
		<key>Infrared Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>赤外線センサーは固体から反射される赤外線を測定できるデジタルセンサーです。</string>
			</dict>
		</dict>
		<key>Input</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ロボットシステムでの入力とは、センサーなどで物理的な情報を集める方法です。たとえば、超音波センサーは前に置かれた物体を検出します。</string>
			</dict>
		</dict>
		<key>Motor (Large)</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Lモーターは強力な“賢い”モーターです。1度の解像度で正確に制御できる回転センサーが内蔵されています。Lモーターはロボットの駆動ベースに最適です。

Lモーターは、オン/オフを切り替えたり、電力レベルを制御したり、指定した時間または回転数だけ動いたりするようにプログラミングできます。</string>
			</dict>
		</dict>
		<key>Motor (Medium)</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>Mモーターにも回転センサーが内蔵されていますが（解像度は1度）、Lモーターより小型で軽いモーターです。Lモーターよりすばやく反応できます。

Mモーターは、オン/オフを切り替えたり、電力レベルを制御したり、指定した時間または回転数だけ動いたりするようにプログラミングできます。</string>
			</dict>
		</dict>
		<key>Output</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ロボットシステムでの出力とは、物理的に変化させる方法です。たとえば、モーターで動きを作り、スピーカーで音を鳴らし、LEDで光を作り、ディスプレイからイメージや文字を表示します。</string>
			</dict>
		</dict>
		<key>Parameters</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>関数の性質。パラメータを変えることで関数の振る舞いを変えることができます。</string>
			</dict>
		</dict>
		<key>Port View</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>ライブビューの最初の画面。接続されたモーターやセンサーの値が含まれる、ポート情報ボックスが表示されます。</string>
			</dict>
		</dict>
		<key>Program Flow</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>関数またはループ構造がプログラム内で実行される順序。</string>
			</dict>
		</dict>
		<key>Quick Help Function</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>考えかたをわかりやすく説明するボックス。関数とそのパラメータについての説明が表示されます。</string>
			</dict>
		</dict>
		<key>Think Algorithmically</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>アルゴリズム的思考とは、問題を解決するために手順を順序立てて組み立てることです。</string>
			</dict>
		</dict>
		<key>Touch Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>タッチセンサーは、センサーの赤いボタンが押されたことや離されたことを検出できるアナログセンサーです。つまり、2つの状態（押された状態または離された状態）を使ってタッチセンサーの動きをプログラミングできることを意味します。タッチセンサーからの入力を使って、目の不自由な人が見ている世界、手を伸ばして何かに触れたら（センサーが押されたら）反応するといった世界をロボットにプログラミングできます。

たとえば、タッチセンサーの底面が押された状態でロボットを組み立てます。そして、ロボットがテーブルの端から離れようとする（センサーが離された）ときに反応する（止まる）ようにロボットをプログラミングできます
			</string>
			</dict>
		</dict>
		<key>Ultrasonic Sensor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>超音波センサーは、前に置かれた物体との距離を測定できるデジタルセンサーです。超音波を物体に送って、音波がセンサーに返ってくる時間を測定します。この音波は人間が聞こえない高い音です。

物体との距離はインチまたはセンチメートル単位で測定できます。これによって、壁から一定の距離のところで止まるようにロボットをプログラミングできます。

センチメートル単位を使用するときは、検出できる距離は3〜250センチメートルです（誤差1センチメートルの精度）。インチ単位を使用するときは、測定できる距離は1〜99インチです（誤差0.394インチの精度）。255センチメートルが100インチです。</string>
			</dict>
		</dict>
		<key>Value</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>パラメータで関数に渡される数値または文字列。</string>
			</dict>
		</dict>
		<key>ev3.brickLightOff</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`brickLightOff`（ブロックライトをオフ）関数では、インテリジェント・ブロック・ステータス・ライトを消すことができます。</string>
			</dict>
		</dict>
		<key>ev3.brickLightOn</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`brickLightOn`（ブロックライトをオン）関数では、インテリジェント・ブロック・ステータス・ライトを制御できます。インテリジェント・ブロック・ステータス・ライトは、EV3ブロックの正面にあるブロックボタンを囲むライトで、緑、オレンジ、または赤で光らせたり消したり点滅させたりできます。</string>
			</dict>
		</dict>
		<key>ev3.display</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>The `display`（表示）関数では、EV3ブロックディスプレイの好きな場所に文字を表示できます。</string>
			</dict>
		</dict>
		<key>ev3.displayCircle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`displayCircle`（円を表示）関数では、ディスプレイに円を描くことができます。</string>
			</dict>
		</dict>
		<key>ev3.displayImage</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`displayImage`（イメージを表示）関数では、グラフィックイメージを描くことができます。EV3ブロックで表示できるイメージファイルのリストからイメージを選べます。</string>
			</dict>
		</dict>
		<key>ev3.displayLine</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`displayLine`（線を表示）関数では、ディスプレイ内の好きな2点間に直線を描くことができます。</string>
			</dict>
		</dict>
		<key>ev3.displayPoint</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`displayPoint`（点を表示）関数では、ディスプレイ内の1つのピクセルを描くことができます。</string>
			</dict>
		</dict>
		<key>ev3.displayRectangle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`displayRectangle`（四角形を表示）関数では、ディスプレイに四角形を描くことができます。</string>
			</dict>
		</dict>
		<key>ev3.measureGyroAngle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureGyroAngle`（ジャイロ角度を測定）関数では、ジャイロセンサーを使って角度を測ることができます。センサーを最後にリセットしたときの位置が基準になります。</string>
			</dict>
		</dict>
		<key>ev3.measureGyroRate</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureGyroRate`（ジャイロ回転を測定）関数では、ジャイロセンサーを使って回転の速さ（1秒あたりの回転角度）を測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.measureLightAmbient</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureLightAmbient`（周辺光を測定）関数では、カラーセンサーを使って周辺光の強さを測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.measureLightColor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureLightColor`（色を測定）関数では、カラーセンサーを使って色を検出できます。</string>
			</dict>
		</dict>
		<key>ev3.measureLightReflection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureLightReflection`（反射光を測定）関数では、カラーセンサーを使って反射光の強さを測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.measureMotorDegrees</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureMotorDegrees`（モーター角度を測定）関数では、モーターの回転角度を測ることができます。プログラムを開始したときまたはセンサーを最後にリセットしたときの位置が基準になります。</string>
			</dict>
		</dict>
		<key>ev3.measureMotorPower</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureMotorPower`（モーターパワーを測定）関数では、モーターの電力レベルを測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.measureMotorRotations</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureMotorRotations`（モーター回転を測定）関数では、モーターの回転数を測ることができます。プログラムを開始したときまたはセンサーを最後にリセットしたときの位置が基準になります。</string>
			</dict>
		</dict>
		<key>ev3.measureTouch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureTouch`（タッチを測定）関数では、タッチセンサーの状態を測ることができます。Pressed（押された）状態とReleased（離れた）状態があります。</string>
			</dict>
		</dict>
		<key>ev3.measureTouchCount</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureTouchCount`（タッチ回数を測定）関数では、プログラムを開始したときまたはセンサーを最後にリセットしたとき以降にタッチセンサーがぶつかった回数を測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.measureUltrasonicCentimeters</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureUltrasonicCentimeters`（超音波を測定（cm））関数では、超音波センサーを使って物体までの距離をセンチメートル単位で測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.measureUltrasonicInches</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`measureUltrasonicInches`（超音波を測定（インチ））関数では、超音波センサーを使って物体までの距離をインチ単位で測ることができます。</string>
			</dict>
		</dict>
		<key>ev3.motorOff</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`motorOff`（モーターをオフ）関数では、モーターを切ることができます。通常は、プログラムで`motorOn`（モーターをオン）関数を使って動かしたモーターを止めるときに使います。withBrake（ブレーキ）を“True”（真）にすると、モーターがただちに止まり、ほかの関数でまた動かすかプログラムが終了するまでその位置にとどまります。withBrakeを“False”（偽）にすると、モーターの電源が切れ、自然に止まるかほかの関数が開始されるまで、残った動力で動き続けます。</string>
			</dict>
		</dict>
		<key>ev3.motorOn</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`motorOn`（モーターをオン）関数では、モーターを制御できます。モーターのオン/オフを切り替えたり、パワーレベルを調整したり、特定の時間または回転数だけ動かしたりできます。通常は、モーターの起動後すぐにプログラム内の次のブロックに進みます。forSeconds（秒）、forDegrees（角度）、またはforRotations（回転）パラメータを使えば、どのくらい動かすかを指定することもできます。withPower（パワー）パラメータを使うと、モーターの速さや向きを調整できます。モーターは、ほかの命令で止めるか、動きを変えるか、またはプログラムが終了するまでそのまま動き続けます。</string>
			</dict>
		</dict>
		<key>ev3.move</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`move`（動かす）関数では、ロボットを前進、後退、方向転換、停止できます。Lモーターが左右に1つずつ付いたロボット車を制御するときに使います。方向転換するときは、2つのモーターを違う速さまたは向きで動かします。通常は、2つのモーターの起動後すぐにプログラム内の次の命令に進みます。forSeconds（秒）、forDegrees（角度）、またはforRotations（回転）パラメータを使えば、どのくらい動かすかを指定することもできます。leftPower（左のパワー）パラメータとrightPower（右のパワー）パラメータを使うと、モーターの速さや向きを調整できます。モーターは、ほかの命令で止めるか、動きを変えるか、またはプログラムが終了するまでそのまま動き続けます。</string>
			</dict>
		</dict>
		<key>ev3.playSound</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`playSound`（音を再生）関数では、EV3ブロック内部のスピーカーを使って音を鳴らすことができます。録音済みのサウンドファイルを再生することも、音程や音色を指定することもできます。</string>
			</dict>
		</dict>
		<key>ev3.resetGyro</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`resetGyro`（ジャイロをリセット）関数では、ジャイロカウンターをリセットできます。</string>
			</dict>
		</dict>
		<key>ev3.resetMotor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`resetMotor`（モーターをリセット）関数では、モーター回転カウンターをリセットできます。</string>
			</dict>
		</dict>
		<key>ev3.resetTouchCount</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>The `resetTouchCount` function allows you to reset the touch counter.</string>
			</dict>
		</dict>
		<key>ev3.stopMove</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`stopMove`（動きを停止）関数では、両方のモーターを切ることができます。プログラムで'move'（動かす）関数を使って動かしたロボットを止めるときに使います。withBrake（ブレーキ）を“True”（真）にすると、モーターがただちに止まり、ほかの関数でまた動かすかプログラムが終了するまでその位置にとどまります。withBrakeを“False”（偽）にすると、モーターの電源が切れ、自然に止まるかほかの関数が開始されるまで、残った動力で動き続けます。</string>
			</dict>
		</dict>
		<key>ev3.stopSound</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`stopSound`（音を停止）関数では、EV3ブロックで再生されている音を止めることができます。通常は、プログラムで'playSound'（音を再生）関数を使って鳴らし始めた音を途中で止めるときに使います。</string>
			</dict>
		</dict>
		<key>ev3.waitFor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitFor`（待機）関数では、指定した秒数だけプログラムを止めることができます。指定した秒数が経つと、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForGyroAngle</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForGyroAngle`（ジャイロ角度を待機）関数では、指定したしきい値よりも角度が大きくなるか小さくなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForGyroRate</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForGyroRate`（ジャイロ回転を待機）関数では、指定したしきい値よりも回転の速さ（1秒あたりの回転角度）が速くなるか遅くなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForLightAmbient</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForLightAmbient`（周辺光を待機）関数では、指定したしきい値よりも周辺光の強さが強くなるか弱くなるなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForLightColor</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForLightColor`（色を待機）関数では、指定した色をカラーセンサーが検出するまでプログラムを止めることができます。検出すると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForLightReflection</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForLightReflection`（反射光を待機）関数では、指定したしきい値よりも反射光の強さが強くなるか弱くなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForMotorDegrees</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForMotorDegrees`（モーター角度を待機）関数では、指定したしきい値よりもモーターの回転角度が大きくなるか小さくなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForMotorPower</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForMotorPower`（モーターパワーを待機）関数では、指定したしきい値よりもモーターへの供給電力が大きくなるか小さくなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForMotorRotations</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForMotorRotations`（モーター回転を待機）関数では、指定したしきい値よりもモーターの回転数が多くなるか少なくなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForTouch</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForTouch`（タッチを待機）関数では、タッチセンサーが押されるまでプログラムを止めることができます。押されると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForTouchCount</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForTouchCount`（タッチ回数を待機）関数では、指定した回数だけタッチセンサーがぶつかるまでプログラムを止めることができます。指定した回数だけぶつかると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForTouchReleased</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForTouchReleased`（タッチ離れを待機）関数では、タッチセンサーが離れるまでプログラムを止めることができます。離れると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicCentimeters</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForUltrasonicCentimeters`（超音波を待機（cm））関数では、指定したしきい値よりも距離（cm）が長くなるか短くなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicDecrease</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForUltrasonicDecrease`（超音波減少を待機）関数では、測定距離が短くなるまでプログラムを止めることができます。小さくなると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicInches</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForUltrasonicInches`（超音波を待機（インチ））関数では、指定したしきい値よりも距離（インチ）が長くなるか短くなるまでプログラムを止めることができます。しきい値を超えると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
		<key>ev3.waitForUltrasonicIncrease</key>
		<dict>
			<key>_LOCALIZABLE_</key>
			<dict>
				<key>Definition</key>
				<string>`waitForUltrasonicIncrease`（超音波増加を待機）関数では、測定距離が長くなるまでプログラムを止めることができます。大きくなると、プログラム内の次の命令に進みます。</string>
			</dict>
		</dict>
	</dict>
</dict>
</plist>
